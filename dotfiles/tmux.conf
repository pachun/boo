# replace ctrl-b prefix with ctrl-a
unbind C-b
set-option -g prefix C-a

# immediately process escapes to switch from insert <-> edit mode in zsh's vi mode (tmux waits 500ms by default)
set -sg escape-time 0

# open new windows at the end of the window list at the current directory with prefix-c
bind c new-window -a -c "#{pane_current_path}"

# Switch windows uing h and l
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# Move windows right and left using o and p
unbind o
bind o swap-window -t -1\; select-window -t -1
unbind p
bind p swap-window -t +1\; select-window -t +1

# split panes using | and _ instead of " and %
unbind '"'
unbind %
bind | split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"

# create pane with bottom 25%
unbind ^T
bind ^T split-window -v -l 8 -c '#{pane_current_path}'

# use vim directionals (ctrl-[hjkl]) to navigate panes
# works inside vim, given: Plug 'christoomey/vim-tmux-navigator' in vimrc
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

# maximize the cursor's pane
unbind +
bind + resize-pane -Z

# enable resizing panes
# in ghostty, double click panes to focus them
# in ghostty, triple click windows to focus them
set -g mouse on

# prompt for a custom session name on detach if one has not been set
bind-key d run-shell '
if [[ $(tmux display-message -p "#S") =~ ^[0-9]+$ ]]; then
  tmux command-prompt -p "Rename session:" "rename-session %%";
fi;
tmux detach-client'

# reload the configuration with prefix+r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# status line (prefix+r to update the status line when the system colorscheme changes)
set -g @black colour0
set -g @red colour1
set -g @green colour2
set -g @yellow colour3
set -g @blue colour4
set -g @magenta colour5
set -g @cyan colour6
set -g @white colour7
set -g @bright_black colour8
set -g @bright_red colour9
set -g @bright_green colour10
set -g @bright_yellow colour11
set -g @bright_blue colour12
set -g @bright_magenta colour13
set -g @bright_cyan colour14
set -g @bright_white colour15

set -g status-left ""
set -g status-right ""
set -g status-justify left
set-option -g status-position bottom

set -g pane-border-style "fg=#{@black}";
set -g pane-active-border-style "fg=#{@black}";
set -g status-bg colour0;
setw -g window-status-format "#[fg=#{@bright_white},bg=#{@black}] #W ";
setw -g window-status-current-format "#[fg=#{@black},bg=#{@white}] #W ";
